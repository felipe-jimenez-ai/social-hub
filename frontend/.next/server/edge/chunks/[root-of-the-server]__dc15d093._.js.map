{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { NextResponse, type NextRequest } from 'next/server'\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const supabaseResponse = NextResponse.next({\r\n    request,\r\n  })\r\n\r\n  const supabase = createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return request.cookies.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          cookiesToSet.forEach(({ name, value, options }) => {\r\n            request.cookies.set(name, value)\r\n            supabaseResponse.cookies.set(name, value, options)\r\n          })\r\n        },\r\n      },\r\n    }\r\n  )\r\n\r\n  // IMPORTANT: Avoid writing any logic between createServerClient and\r\n  // supabase.auth.getUser(). A simple mistake could make it very hard to debug\r\n  // issues with users being randomly logged out.\r\n\r\n  const {\r\n    data: { user },\r\n  } = await supabase.auth.getUser()\r\n\r\n  // Protect routes that require authentication\r\n  if (!user && (\r\n    request.nextUrl.pathname.startsWith('/members') ||\r\n    request.nextUrl.pathname.startsWith('/my-circle') ||\r\n    request.nextUrl.pathname.startsWith('/profile')\r\n  )) {\r\n    // Redirect to login if user is not authenticated\r\n    const url = request.nextUrl.clone()\r\n    url.pathname = '/auth/login'\r\n    return NextResponse.redirect(url)\r\n  }\r\n\r\n  // IMPORTANT: You *must* return the supabaseResponse object as it is. If you're\r\n  // creating a new response object with NextResponse.next() make sure to:\r\n  // 1. Pass the request in it, like so:\r\n  //    const myNewResponse = NextResponse.next({ request })\r\n  // 2. Copy over the cookies, like so:\r\n  //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\r\n  // 3. Change the myNewResponse object instead of the supabaseResponse object\r\n\r\n  return supabaseResponse\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * Feel free to modify this pattern to include more paths.\r\n     */\r\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\r\n  ],\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,mBAAmB,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACzC;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,sUAGhC;QACE,SAAS;YACP;gBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;YAC/B;YACA,QAAO,YAAY;gBACjB,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;oBAC5C,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;oBAC1B,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;gBAC5C;YACF;QACF;IACF;IAGF,oEAAoE;IACpE,6EAA6E;IAC7E,+CAA+C;IAE/C,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE/B,6CAA6C;IAC7C,IAAI,CAAC,QAAQ,CACX,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,eACpC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,iBACpC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WACtC,GAAG;QACD,iDAAiD;QACjD,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,+EAA+E;IAC/E,wEAAwE;IACxE,sCAAsC;IACtC,0DAA0D;IAC1D,qCAAqC;IACrC,qEAAqE;IACrE,4EAA4E;IAE5E,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}