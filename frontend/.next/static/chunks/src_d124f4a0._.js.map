{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USUARIO/CascadeProjects/the-hub/frontend/src/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\r\n\r\nexport function createClient() {\r\n  return createBrowserClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USUARIO/CascadeProjects/the-hub/frontend/src/components/AuthProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { createClient } from '@/lib/supabase/client'\r\nimport type { User } from '@supabase/supabase-js'\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  signOut: () => Promise<void>\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n  signOut: async () => {},\r\n})\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const supabase = createClient()\r\n\r\n  useEffect(() => {\r\n    // Get initial session\r\n    const getInitialSession = async () => {\r\n      const { data: { session } } = await supabase.auth.getSession()\r\n      setUser(session?.user ?? null)\r\n      setLoading(false)\r\n    }\r\n\r\n    getInitialSession()\r\n\r\n    // Listen for auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        setUser(session?.user ?? null)\r\n        setLoading(false)\r\n      }\r\n    )\r\n\r\n    return () => subscription.unsubscribe()\r\n  }, [supabase.auth])\r\n\r\n  const signOut = async () => {\r\n    await supabase.auth.signOut()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAYA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,SAAS;IACT,SAAS,WAAa;AACxB;AAEO,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,SAAS,aAAa,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,eAAY,AAAD;IAE5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,sBAAsB;YACtB,MAAM;4DAAoB;oBACxB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;wBACpD;oBAAR,QAAQ,CAAA,gBAAA,oBAAA,8BAAA,QAAS,IAAI,cAAb,2BAAA,gBAAiB;oBACzB,WAAW;gBACb;;YAEA;YAEA,0BAA0B;YAC1B,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB;0CAChE,OAAO,OAAO;wBACJ;oBAAR,QAAQ,CAAA,gBAAA,oBAAA,8BAAA,QAAS,IAAI,cAAb,2BAAA,gBAAiB;oBACzB,WAAW;gBACb;;YAGF;0CAAO,IAAM,aAAa,WAAW;;QACvC;iCAAG;QAAC,SAAS,IAAI;KAAC;IAElB,MAAM,UAAU;QACd,MAAM,SAAS,IAAI,CAAC,OAAO;IAC7B;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAQ;kBACnD;;;;;;AAGP;IAnCgB;KAAA","debugId":null}}]
}